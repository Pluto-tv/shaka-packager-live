# Copyright 2023 Pluto TV
# Copyright 2022 Google LLC
#
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file or at
# https://developers.google.com/open-source/licenses/bsd

name: GitHub Development Snapshot Build

on:
  push:
    branches: [ feature/TRANS-4831-nighty-builds ]
  workflow_dispatch:

env:
  DEVELOPMENT_BRANCH: "pluto-cmake"
  # default development tag
  # TODO(sasha): provide tag on workflow dispatch
  DEVELOPMENT_TAG: "develop"
  ARTIFACT_NAME: "develop"

jobs:
  build_linux:
    name: Build artifacts and upload to GitHub
    runs-on: ubuntu-latest
    steps:
      - name: Install build tools
        run: |
          sudo apt update && sudo apt install -y \
              cmake

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.DEVELOPMENT_BRANCH }}
          submodules: recursive

      - name: Apply ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Generate build files
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

          mkdir -p build/

          cmake \
            -DCMAKE_BUILD_TYPE="Release" \
            -DBUILD_SHARED_LIBS=1 \
            -S . \
            -B build/

      - name: Build
        run: cmake --build build/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/packager/libpackager.so

  setup_tag:
    name: Setup snapshot tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.compute_tag.outputs.tag }}
    steps:
      - name: Checkout development branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.DEVELOPMENT_BRANCH }}
      - name: Remove tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "tags/${{ env.DEVELOPMENT_TAG }}"
            })
      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ env.DEVELOPMENT_TAG }}",
              sha: context.sha
            })
      - name: Compute tag
        id: compute_tag
        run: |
          # Strip refs/tags/ from the input to get the tag name, then store
          # that in output.
          echo "tag=$DEVELOPMENT_TAG" >> $GITHUB_OUTPUT

  draft_release:
    needs: [build_linux, setup_tag]
    name: Create GitHub development snapshot draft release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.draft_release.outputs.id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}

      # Debug
      - name: Display structure of downloaded files
        run: ls -la

      - name: Publish release
        id: publish_release
        uses: ncipollo/release-action@v1.13.0
        with:
          allowUpdates: true
          replacesArtifacts: true
          artifacts: libpackager.so
          token: ${{ secrets.BUILD_TOKEN_EPHEMERAL}}
          commit: ${{ env.DEVELOPMENT_BRANCH }}
          name: "Development snapshot"
          tag: ${{ needs.setup_tag.outputs.tag }}
          draft: false
          body: "Latest build of the development branch"
