# Copyright 2023 Pluto TV

name: Attach release artifacts

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag of the release'
        required: true
        type: string

env:
  ARTIFACT_NAME: "artifact"
  ARTIFACT_NAME_2: "artifact_arm64"

jobs:
  build_linux:
    name: Build artifact and upload
    runs-on: ubuntu-latest
    steps:
      - name: Install build tools
        run: |
          sudo apt update && sudo apt install -y \
              cmake

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          submodules: recursive

      - name: Apply ccache
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Generate build files
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

          mkdir -p build/

          cmake \
            -DCMAKE_BUILD_TYPE="Release" \
            -DBUILD_SHARED_LIBS=1 \
            -DUSE_WORKAROUND_FOR_TRUN_VERSION_0=1 \
            -S . \
            -B build/

      - name: Build
        run: cmake --build build/ --parallel $(getconf _NPROCESSORS_ONLN)

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/packager/libpackager.so

  build_macos_arm64:
    name: MacOS M1 build
    runs-on: macos-14
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          submodules: recursive

      - name: Generate build files
        run: |
          mkdir -p build/

          cmake \
            -DCMAKE_BUILD_TYPE="Release" \
            -DBUILD_SHARED_LIBS=1 \
            -DUSE_WORKAROUND_FOR_TRUN_VERSION_0=1 \
            -S . \
            -B build/

      - name: Build
        run: cmake --build build/ --parallel $(getconf _NPROCESSORS_ONLN)

      # Debug
      - name: Display structure of built files
        run: ls -la build/packager

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_2 }}
          path: build/packager/libpackager.dylib

  update_release:
    needs: [build_linux, build_macos_arm64]
    name: Update release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Download artifact 2
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME_2 }}

      # Debug
      - name: Display structure of downloaded files
        run: ls -la

      - name: Attach artifact
        id: attach_artifact
        uses: ncipollo/release-action@v1.13.0
        with:
          allowUpdates: true
          replacesArtifacts: true
          artifacts: |
            libpackager.so
            libpackager.dylib
          token: ${{ secrets.GITHUB_TOKEN }}
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          tag: ${{ inputs.tag }}
          draft: false
